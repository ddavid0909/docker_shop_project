Contract skeleton

variables:
- order_status : 'CREATED', 'PENDING', 'DELIVERED'
  control: cannot become pending until money is on the contract and courier has arrived
           cannot become delivered until customer confirms it has been delivered.
           once delivered, no one can interact with the contract anymore.

- money_needed = amount_of_money_to_pay
- money_available = 0
functions:
- constructor(customer_address, amount_of_money_to_pay, owner_address)
- modifiers customer_only and courier_only
- add_money() customer_only require(order_status == 'CREATED')
- add_courier() owner_only require(order_status == 'CREATED' and money_needed == money_available) -> order_status = pending
- confirm_delivery() customer_only require(order_status == 'PENDING') -> transfer money to accounts of courier and owner. order_status = delivered.

TO_DO:
- Solidity
1. Start trufflesuite/ganache-cli container +
2. Write test for solidity part +
3. Decide how to catch solidity exceptions and give satisfying output +
4. Add trufflesuite container to the yaml. +
5. Separate web3 functions into another module. +
6. Figure out the error
- Flask, Migrate
1. Split main_app into three containers
2. Add migrations to the container or even learn how to run them on the running container.
